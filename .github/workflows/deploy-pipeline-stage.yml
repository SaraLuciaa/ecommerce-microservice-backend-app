name: Stage Environment - Deploy

on:
  push:
    branches: [ stage, develop ]
  pull_request:
    branches: [ stage ]

jobs:
  deploy:
    name: Deploy
    runs-on: [self-hosted, Windows]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          clean: false

      - name: Restart Minikube
        run: |
          Write-Host "Cleaning Minikube..."
          minikube delete
          Write-Host "Starting Minikube..."
          minikube start --driver=docker
          Write-Host "Setting kubectl context to Minikube..."
          kubectl config use-context minikube

      - name: Deploy manifests
        run: |
          Write-Host "Applying Kubernetes manifests..."
          kubectl apply -f k8s/

      - name: Verify running resources
        run: |
          $timeout = 600
          Write-Host "Waiting up to $timeout seconds for all deployments to become available..."
          kubectl wait --for=condition=available --all deployment --timeout="$($timeout)s"
          Write-Host "Waiting up to $timeout seconds for all pods to be Ready..."
          kubectl wait --for=condition=Ready pod --all --timeout="$($timeout)s"
          Write-Host "Listing deployments, pods, and services:"
          kubectl get deployments -o wide
          kubectl get pods -o wide
          kubectl get svc -o wide

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      - name: Install Locust dependencies
        run: |
          Write-Host "Installing Locust performance testing dependencies..."
          pip install -r perf/locust/requirements.txt

      - name: Get Kubernetes service endpoint
        id: get-endpoint
        run: |
          Write-Host "Getting API Gateway service endpoint..."
          $gatewayService = kubectl get service api-gateway -o json | ConvertFrom-Json
          $nodePort = $gatewayService.spec.ports[0].nodePort
          $minikubeIp = minikube ip
          $endpoint = "http://${minikubeIp}:${nodePort}"
          Write-Host "API Gateway endpoint: $endpoint"
          echo "endpoint=$endpoint" >> $env:GITHUB_OUTPUT

      - name: Run performance tests
        run: |
          Write-Host "Running Locust performance tests against Kubernetes deployment..."
          locust -f perf/locust/locustfile.py `
            --host ${{ steps.get-endpoint.outputs.endpoint }} `
            --headless -u 10 -r 2 -t 2m `
            --csv results/perf_results `
            --html results/perf_report.html
        env:
          LOCUST_BASE_PATH: ""
          LOCUST_USERNAME: test
          LOCUST_PASSWORD: password

      - name: Upload performance test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: performance-test-results
          path: results/

      - name: Cleanup Kubernetes resources and Minikube
        if: always()
        run: |
          Write-Host "Cleaning up Kubernetes resources (ignoring not-found)..."
          kubectl delete -f k8s/ --ignore-not-found
          Write-Host "Stopping Minikube..."
          minikube stop || Write-Host "minikube stop failed or minikube not running"
          Write-Host "Deleting Minikube cluster..."
          minikube delete || Write-Host "minikube delete failed or cluster already removed"
